//========================================================================================
// Classical Logic Combinators
//
// Unlike other combinators these return quotations

// Starling
// \abc.ac(bc)
define S : ( -> (('a -> ('b -> 'c)) -> (('a -> 'b) -> ('a -> 'c))))
{ \a.[\b.[\c.[c b A c a A A]]] }

// Kestrel
// \ab.a
define K : ( -> ('a -> ('b -> 'a)))
{ \a.[\b.[a]] }

// Identity
// \a.a
// S(K)(K)
define I : ( -> ('a -> 'a))
{ K K S A A }

// Kite
// \ab.b
// K(I)
define KI : ( -> ('a -> ('b -> 'b)))
{ I K A }

// Owl
// \ab.b(ab)
// S(I)
// Bug, 'C needed as a workaround
//define O : ( -> ((('C 'a -> 'C 'b) -> 'a) -> (('C 'a -> 'C 'b) -> 'b)))
define O : ( -> ((('a -> 'b) -> 'a) -> (('a -> 'b) -> 'b)))
{ I S A }

// Mockingbird
// \a.aa
// S(I)(I)
// TODO: add type annotation
define M
{ I I S A A }

// Bluebird
// \abc.a(bc)
// S(K(S))(K)
define B : ( -> (('a -> 'b) -> (('c -> 'a) -> ('c -> 'b))))
{ K S K A S A A }

// Double mockingbird
// \ab.ab(ab)
define M2 : ( -> (('a -> (self -> 'b)) -> ('a -> 'b)))
{ M B A }

// Dove
// \abcd.ab(cd)
// B(B)
define D : ( -> (('a -> ('b -> 'c)) -> ('a -> (('d -> 'b) -> ('d -> 'c)))))
{ B B A }

// Cardinal
// \abc.acb
// S(B(B)(S))(K(K))
define C : ( -> (('a -> ('b -> 'c)) -> ('b -> ('a -> 'c))))
{ K K A S B B A A S A A }

// Thrush
// \ab.ba
// C(I)
define T : ( -> ('a -> (('a -> 'b) -> 'b)))
{ I C A }

// Eagle
// \abcde.ab(cde)
// B(B(B)(B))
define E : ( -> (('a -> ('b -> 'c)) -> ('a -> (('d -> ('e -> 'b)) -> ('d -> ('e -> 'c))))))
{ B B B A A B A }

// Finch
// \abc.cba
// E(T)(T)(E)(T)
define F : ( -> ('a -> ('b -> (('b -> ('a -> 'c)) -> 'c))))
{ T E T T E A A A A }

// Lark
// \ab.a(bb)
// C(B)(M)
define L : ( -> (('a -> 'b) -> ((self -> 'a) -> 'b)))
{ M B C A A }

// Robin
// \abc.bca
// B(B)(T)
define R : ( -> ('a -> (('b -> ('a -> 'c)) -> ('b -> 'c))))
{ T B B A A }

// Turing
// \ab.b(aab)
// L(O)
// bug, 'C is needed as a workaround
//define U : ( -> ((self -> (('a -> 'b) -> 'a)) -> (('a -> 'b) -> 'b)))
define U : ( -> ((self -> (('C 'a -> 'C 'b) -> 'a)) -> (('C 'a -> 'C 'b) -> 'b)))
{ O L A }

// Vireo
// \abc.cab
// B(C)(T)
define V : ( -> ('a -> ('b -> (('a -> ('b -> 'c)) -> 'c))))
{ T C B A A }

// Warbler
// \ab.abb
// C(B(M)(R))
// Bug, expected: ( -> (('a -> ('a -> 'b)) -> ('a -> 'b)))
define W : ( -> (self -> (self -> 'c)))
{ R M B A A C A }
