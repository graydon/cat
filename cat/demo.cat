define pattern0
{ [blue pc [100 sq 15 rt] 24 repeat] render }

define pattern1
{ [blue pc [100 sq 15 rt 10 fd] 24 repeat] render }

define fractal0 : (int -> )
{
  dup sq 15 tr           // draw a square
  pu dup fd pd           // move forward
  dup 5 <                // how small are we drawing?
    [pop]                // base-case
    [3 4 frac fractal0]  // recursive call (draw fractal again, but smaller)
  if
}

define fractal1 : (int -> )
{
  dup sq
  dup 3 <
    [pop]
    [
      dup fd
      dup 4 5 frac
      45 tl fractal1
      45 tr
      bk
    ]
  if
}

define demo
{
  open_window 90 tl 80 fractal1
}

