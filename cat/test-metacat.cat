// Dedicated to the public domain by Christopher Diggins
// This file is free to be used, modified or redistributed for any purpose,
// without restriction, obligation, or warantee.
// http://www.cdiggins.com

//////////////////////////////////////////////////////////////////////////////////////////
// Macro Tests

define macro_test
{
  "expected " write
  [write] dip
  dup
  ", source " write
  write
  #m
  ", result " write
  writeln
}

define test_macros
{
  [] [noop]  macro_test
  [] [id]  macro_test
  [[]] [[id]] macro_test
  [] [swap swap]  macro_test
  [] [dup pop]  macro_test
  [] [not not]  macro_test
  [] [pair unpair]  macro_test
  [] [cons uncons]  macro_test
  [dup] [dup swap]  macro_test
  [] [swap quote dip] macro_test
  [] [dup swap pop]  macro_test
  [2 1] [1 2 swap]  macro_test
  [2 1] [1 2 swap swap swap] macro_test
  [true] [false true and not]  macro_test
  [[42]] [42 quote] macro_test
  [42] [[42] apply] macro_test
  [42] [42 quote apply] macro_test
  [[1 2]] [[1] [2] compose] macro_test
  [2] [1 2 popd] macro_test
  [nil] [nil [2 mul_int] map] macro_test
  [nil] [nil [3 lt_int] filter] macro_test
  [42] [nil 42 [add_int] fold] macro_test
  [1 1 2] [1 2 dupd] macro_test
  [2 1 3] [1 2 3 swapd] macro_test
  [2 3 1] [1 2 3 dig] macro_test
  [3 1 2] [1 2 3 bury] macro_test
  [swap] [swap and] macro_test
  [[1 2 3 4] list] [[1 2] list [3 4] list cat] macro_test
  [[1 +] [2 *] compose map] [[1 +] map [2 *] map] macro_test
  [[1 + 2 *] compose map] [[1 +] [2 *] compose map] macro_test
  [[1 2] dip] [[1] dip [2] dip] macro_test
}