//////////////////////////////////////////////////////////////////////////////////////////

define incf { [i 1 +] compose }
define x2f { [i 2 *] compose }
define sqrf { [i dup *] compose }
define halvef { [i 2 /] compose }

define test_combinator
{
  write dup write ", " write list writeln
}

define cl_tests
{
  [[1] i]         "1 " test_combinator
  [[2] [1] k]     "1 " test_combinator
  [[2] [1] ki]    "2 " test_combinator
  [[1] m]         "[1] 1 " test_combinator
  [[2] [1] o]     "[[2] 1] 2 " test_combinator
  [[2] [1] t]     "[2] 1 " test_combinator
  [[2] [1] w]     "[[2] 2] 1 " test_combinator
  [[3] [2] [1] b] "[[3] 2] 1 " test_combinator
  [[3] [2] [1] c] "[[2] 3] 1 " test_combinator
  [[3] [2] [1] r] "[[1] 3] 2 " test_combinator
  [[3] [2] [1] v] "[[2] 1] 3 " test_combinator
  [[3] [2] [1] f] "[[1] 2] 3 " test_combinator
}
