define test : (('a -> 'b) list -> bool)
{
  [list] dip
  compare_lists
}

define test_list : ( -> list)
{
  ((1, "a"),(2, "b"),(3, "a"),(4, "c"),(5, "b"),(6, "a"))
}

define list_to_hash_test
{ test_list self_join }


define if_swap : ('a 'a  ('a 'a -> 'a 'a bool) -> 'a 'a)
{ eval [] [swap] if }

//============================================================================
// Sorting functions

define ordered_swap : ('a 'a -> 'a 'a)
{ compare [] [swap] if }

define sorted_insert : (list 'a -> list)
{ nil [uncons] dip [swapd swap cons] [[empty not] dip] while cat }

define insert_sort
{ }

//===========================================================================

