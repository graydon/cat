//========================================================================================
// Classical Logic Combinators

define (
{ }

define )
{ swap A }

// Starling
// \abc.ac(bc)
define S
{ \a.[\b.[\c.[c b A c a A A]]] }

// Kestrel
// \ab.a
define K
{ \a.[\b.[a]] }

// Identity
// \a.a
// S(K)(K)
define I
{ ((S K) K) }

// Kite
// \ab.b
// K(I)
define KI
{ (K I)  }

// Owl
// \ab.b(ab)
// S(I)
define O
{ (S I) }

// Mockingbird
// \a.aa
// S(I)(I)
define M : ( -> (self -> 'a))
{ ((S I) I) }

// Bluebird
// \abc.a(bc)
// S(K(S))(K)
define B : ( -> (('a -> 'b) -> (('c -> 'a) -> ('c -> 'b))))
{((S (K S)) K) }

// Double mockingbird
// \ab.ab(ab)
// B(M)
define M2 : ( -> (('a -> (self -> 'b)) -> ('a -> 'b)))
{ (B M) }

// Dove
// \abcd.ab(cd)
// B(B)
define D : ( -> (('a -> ('b -> 'c)) -> ('a -> (('d -> 'b) -> ('d -> 'c)))))
{ (B B) }

// Cardinal
// \abc.acb
// S(B(B)(S))(K(K))
define C : ( -> (('a -> ('b -> 'c)) -> ('b -> ('a -> 'c))))
{ ((S ((B B) S)) (K K)) }

// Thrush
// \ab.ba
// C(I)
define T : ( -> ('a -> (('a -> 'b) -> 'b)))
{ (C I) }

// Eagle
// \abcde.ab(cde)
// B(B(B)(B))
define E : ( -> (('a -> ('b -> 'c)) -> ('a -> (('d -> ('e -> 'b)) -> ('d -> ('e -> 'c))))))
{ (B ((B B) B)) }

// Finch
// \abc.cba
// E(T)(T)(E)(T)
define F : ( -> ('a -> ('b -> (('b -> ('a -> 'c)) -> 'c))))
{ ((((E T) T) E) T) }

// Lark
// \ab.a(bb)
// C(B)(M)
define L : ( -> (('a -> 'b) -> (self -> 'b)))
{ ((C B) M) }

// Robin
// \abc.bca
// B(B)(T)
define R : ( -> ('a -> (('b -> ('a -> 'c)) -> ('b -> 'c))))
{ ((B B) T) }

// Turing
// \ab.b(aab)
// L(O)
define U : ( -> (self -> (('a -> 'b) -> 'b)))
{ (L O) }

// Vireo
// \abc.cab
// B(C)(T)
define V : ( -> ('a -> ('b -> (('a -> ('b -> 'c)) -> 'c))))
{ ((B C) T) }

// Warbler
// \ab.abb
// C(B(M)(R))
define W : ( -> ('a -> ('a -> 'b)))
{ (C ((B M) R)) }